version: '3.9'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Carpeta24*
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python_backend
    restart: always
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:Carpeta24*@db:5432/riskmaltern
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app_network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: always
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    networks:
      - app_network

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok_jenkins
    restart: always
    command: ["start", "--all"]
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    environment:
      - NGROK_CONFIG=/etc/ngrok.yml
    depends_on:
      - jenkins

volumes:
  db_data:
  jenkins_home:

networks:
  app_network:
    driver: bridge